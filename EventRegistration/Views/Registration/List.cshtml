@model IEnumerable<Registration>

@{
    ViewBag.Title = "List";
}

@helper CreateOrdinal(int index)
{
    switch (index.ToString().Last())
    {
        case '1':
            @(index + "st");
            break;
        case '2':
            @(index + "nd");
            break;
        case '3':
            @(index + "rd");
                   break;
        default:
            @(index + "th");
            break;
    }
}

<h4>The query.recordcount is @Model.Count() </h4>

<h5>@ViewBag.Time verses @string.Format("{0:t}", ViewBag.Time)</h5>

@*<h4>There are @Enumerable.Count(Model) registrations</h4>*@
<br />
<h4>
    @switch (Model.Count())
    {
        case 0:
        @:There are no registrations
            break;
        case 1:
        @:There is one registration
            break;
        default:
        <text>
        There are @Model.Count() registrations.
            The first of them is for @Model.First().Name at
            the @Model.First().Competition.Name event.
            </text>
            break;
    }

</h4>
<table>
    <tr>
        <th>Index</th>
        <th>Name</th>
        <th>Age</th>
        <th>Home City</th>
        <th>Event</th>
    </tr>
    @{
        Registration[] regArray = Model.ToArray();
        int itemCount = regArray.Length;
        for (int i = 0; i < itemCount; i++)
        {
        <tr>
            <td>@CreateOrdinal(i + 1)</td>
            <td>@regArray[i].Name</td>
            <td>@regArray[i].Age</td>
            <td>@regArray[i].HomeCity</td>
            <td>@regArray[i].Competition.Name</td>
        </tr>
        }
    }
</table>
